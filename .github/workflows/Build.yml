name: BuildAndTest

on:
  push:
    paths:
      - '**.c'
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/Build.yml'
  pull_request:
    paths:
      - '**.c'
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**.cmake'
      - '**/CMakeLists.txt'
      - '.github/workflows/Build.yml'
jobs:
  generate:
    name: ${{ matrix.os }}/${{ matrix.compiler }}/MPI${{ matrix.mpi }}/${{ matrix.mode }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        compiler: [clang, gcc]
        mpi: [OFF]
        mode: [Debug, Release]
    if: "!contains(github.event.head_commit.message, 'skip build')"
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install dependence
        run: |
          export INPUT_MPI=${{ matrix.mpi }}
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update && sudo apt install -y libmlir-18-dev clang-18 gcc g++ cmake mlir-18-tools
            sudo apt install pipx libspdlog-dev libbenchmark-dev libgtest-dev libgmock-dev
            if [ "$INPUT_MPI" == "ON" ]; then
               sudo apt install -y libopenmpi-dev libhdf5-mpi-dev
            else
              sudo apt install -y libhdf5-dev
            fi
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install lcov boost
            if [ "$INPUT_MPI" == "ON" ]; then
               brew install open-mpi hdf5-mpi
            else
              brew install hdf5
            fi
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi
          pipx install sphinx breathe
      - name: Make directory
        run: mkdir -p build
      - name: Generate
        working-directory: ./build
        run: |
          if [ "${{ matrix.compiler }}" == "clang" ]; then
            if [ "$RUNNER_OS" == "Linux" ]; then
              cmake -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCMAKE_C_COMPILER=clang-18 -DCMAKE_CXX_COMPILER=clang++-18 \
              -DMLIR_DIR=/usr/lib/llvm-18/lib/cmake/mlir -DGTest_DIR=/usr/lib/x86_64-linux-gnu/cmake/GTest ..
            else
              cmake -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCMAKE_C_COMPILER=/usr/local/opt/llvm/bin/clang \
                    -DCMAKE_CXX_COMPILER=/usr/local/opt/llvm/bin/clang++ ..
            fi
          else
            cmake -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ \
              -DMLIR_DIR=/usr/lib/llvm-18/lib/cmake/mlir -DGTest_DIR=/usr/lib/x86_64-linux-gnu/cmake/GTest ..
          fi
          if [ "$RUNNER_OS" == "Linux" ]; then
            cmake --build . -t All_CI OpFlow-JIT --parallel 2 --config ${{ matrix.mode }}
          else
            cmake --build . -t All_CI OpFlow-JIT --parallel 3 --config ${{ matrix.mode }}
          fi
      - name: Test
        working-directory: ./build
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            ctest --parallel 2 -C ${{ matrix.mode }} -VV
          else
            ctest --parallel 3 -C ${{ matrix.mode }} -VV
          fi
